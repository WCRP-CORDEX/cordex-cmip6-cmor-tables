Traceback (most recent call last):
  File "/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/cordex-examples/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
filename = test_cmorizer_fx()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
File [0;32m/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/fsspec/registry.py:228[0m, in [0;36mget_filesystem_class[0;34m(protocol)[0m
[1;32m    227[0m [38;5;28;01mtry[39;00m:
[0;32m--> 228[0m     register_implementation(protocol, [43m_import_class[49m[43m([49m[43mbit[49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43mclass[39;49m[38;5;124;43m"[39;49m[43m][49m[43m)[49m)
[1;32m    229[0m [38;5;28;01mexcept[39;00m [38;5;167;01mImportError[39;00m [38;5;28;01mas[39;00m e:

File [0;32m/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/fsspec/registry.py:251[0m, in [0;36m_import_class[0;34m(cls, minv)[0m
[1;32m    250[0m mod, name [38;5;241m=[39m [38;5;28mcls[39m[38;5;241m.[39mrsplit([38;5;124m"[39m[38;5;124m.[39m[38;5;124m"[39m, [38;5;241m1[39m)
[0;32m--> 251[0m mod [38;5;241m=[39m [43mimportlib[49m[38;5;241;43m.[39;49m[43mimport_module[49m[43m([49m[43mmod[49m[43m)[49m
[1;32m    252[0m [38;5;28;01mreturn[39;00m [38;5;28mgetattr[39m(mod, name)

File [0;32m/usr/share/miniconda/envs/cordex-examples/lib/python3.8/importlib/__init__.py:127[0m, in [0;36mimport_module[0;34m(name, package)[0m
[1;32m    126[0m         level [38;5;241m+[39m[38;5;241m=[39m [38;5;241m1[39m
[0;32m--> 127[0m [38;5;28;01mreturn[39;00m [43m_bootstrap[49m[38;5;241;43m.[39;49m[43m_gcd_import[49m[43m([49m[43mname[49m[43m[[49m[43mlevel[49m[43m:[49m[43m][49m[43m,[49m[43m [49m[43mpackage[49m[43m,[49m[43m [49m[43mlevel[49m[43m)[49m

File [0;32m<frozen importlib._bootstrap>:1014[0m, in [0;36m_gcd_import[0;34m(name, package, level)[0m

File [0;32m<frozen importlib._bootstrap>:991[0m, in [0;36m_find_and_load[0;34m(name, import_)[0m

File [0;32m<frozen importlib._bootstrap>:975[0m, in [0;36m_find_and_load_unlocked[0;34m(name, import_)[0m

File [0;32m<frozen importlib._bootstrap>:671[0m, in [0;36m_load_unlocked[0;34m(spec)[0m

File [0;32m<frozen importlib._bootstrap_external>:843[0m, in [0;36mexec_module[0;34m(self, module)[0m

File [0;32m<frozen importlib._bootstrap>:219[0m, in [0;36m_call_with_frames_removed[0;34m(f, *args, **kwds)[0m

File [0;32m/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/fsspec/implementations/http.py:11[0m, in [0;36m<module>[0;34m[0m
[1;32m      9[0m [38;5;28;01mfrom[39;00m [38;5;21;01murllib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mparse[39;00m [38;5;28;01mimport[39;00m urlparse
[0;32m---> 11[0m [38;5;28;01mimport[39;00m [38;5;21;01maiohttp[39;00m
[1;32m     12[0m [38;5;28;01mimport[39;00m [38;5;21;01mrequests[39;00m

[0;31mModuleNotFoundError[0m: No module named 'aiohttp'

The above exception was the direct cause of the following exception:

[0;31mImportError[0m                               Traceback (most recent call last)
Input [0;32mIn [4][0m, in [0;36m<cell line: 1>[0;34m()[0m
[0;32m----> 1[0m filename [38;5;241m=[39m [43mtest_cmorizer_fx[49m[43m([49m[43m)[49m

Input [0;32mIn [3][0m, in [0;36mtest_cmorizer_fx[0;34m()[0m
[1;32m     13[0m [38;5;28;01mdef[39;00m [38;5;21mtest_cmorizer_fx[39m():
[0;32m---> 14[0m     ds [38;5;241m=[39m [43mpr[49m[38;5;241;43m.[39;49m[43mdata[49m[38;5;241;43m.[39;49m[43msurflib[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mEUR-11[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m     15[0m     eur11 [38;5;241m=[39m cx[38;5;241m.[39mcordex_domain([38;5;124m"[39m[38;5;124mEUR-11[39m[38;5;124m"[39m)
[1;32m     16[0m     ds [38;5;241m=[39m ds[38;5;241m.[39massign_coords({[38;5;124m"[39m[38;5;124mlon[39m[38;5;124m"[39m: eur11[38;5;241m.[39mlon, [38;5;124m"[39m[38;5;124mlat[39m[38;5;124m"[39m: eur11[38;5;241m.[39mlat})

File [0;32m/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/pyremo/core/data.py:56[0m, in [0;36msurflib[0;34m(domain, crop, update_meta)[0m
[1;32m     53[0m [38;5;28;01mimport[39;00m [38;5;21;01mxarray[39;00m [38;5;28;01mas[39;00m [38;5;21;01mxr[39;00m
[1;32m     55[0m url [38;5;241m=[39m bodlib_tpl[38;5;241m.[39mformat(domain)
[0;32m---> 56[0m [38;5;28;01mwith[39;00m [43mfsspec[49m[38;5;241;43m.[39;49m[43mopen[49m[43m([49m[43murl[49m[43m)[49m [38;5;28;01mas[39;00m f:
[1;32m     57[0m     [38;5;66;03m# ds = open_remo_dataset(f, update_meta=True).squeeze(drop=True)[39;00m
[1;32m     58[0m     ds [38;5;241m=[39m xr[38;5;241m.[39mopen_dataset(f)[38;5;241m.[39msqueeze(drop[38;5;241m=[39m[38;5;28;01mTrue[39;00m)
[1;32m     59[0m [38;5;28;01mif[39;00m update_meta:

File [0;32m/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/fsspec/core.py:467[0m, in [0;36mopen[0;34m(urlpath, mode, compression, encoding, errors, protocol, newline, **kwargs)[0m
[1;32m    417[0m [38;5;28;01mdef[39;00m [38;5;21mopen[39m(
[1;32m    418[0m     urlpath,
[1;32m    419[0m     mode[38;5;241m=[39m[38;5;124m"[39m[38;5;124mrb[39m[38;5;124m"[39m,
[0;32m   (...)[0m
[1;32m    425[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[1;32m    426[0m ):
[1;32m    427[0m     [38;5;124;03m"""Given a path or paths, return one ``OpenFile`` object.[39;00m
[1;32m    428[0m 
[1;32m    429[0m [38;5;124;03m    Parameters[39;00m
[0;32m   (...)[0m
[1;32m    465[0m [38;5;124;03m    ``OpenFile`` object.[39;00m
[1;32m    466[0m [38;5;124;03m    """[39;00m
[0;32m--> 467[0m     [38;5;28;01mreturn[39;00m [43mopen_files[49m[43m([49m
[1;32m    468[0m [43m        [49m[43murlpath[49m[38;5;241;43m=[39;49m[43m[[49m[43murlpath[49m[43m][49m[43m,[49m
[1;32m    469[0m [43m        [49m[43mmode[49m[38;5;241;43m=[39;49m[43mmode[49m[43m,[49m
[1;32m    470[0m [43m        [49m[43mcompression[49m[38;5;241;43m=[39;49m[43mcompression[49m[43m,[49m
[1;32m    471[0m [43m        [49m[43mencoding[49m[38;5;241;43m=[39;49m[43mencoding[49m[43m,[49m
[1;32m    472[0m [43m        [49m[43merrors[49m[38;5;241;43m=[39;49m[43merrors[49m[43m,[49m
[1;32m    473[0m [43m        [49m[43mprotocol[49m[38;5;241;43m=[39;49m[43mprotocol[49m[43m,[49m
[1;32m    474[0m [43m        [49m[43mnewline[49m[38;5;241;43m=[39;49m[43mnewline[49m[43m,[49m
[1;32m    475[0m [43m        [49m[43mexpand[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    476[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m,[49m
[1;32m    477[0m [43m    [49m[43m)[49m[[38;5;241m0[39m]

File [0;32m/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/fsspec/core.py:299[0m, in [0;36mopen_files[0;34m(urlpath, mode, compression, encoding, errors, name_function, num, protocol, newline, auto_mkdir, expand, **kwargs)[0m
[1;32m    230[0m [38;5;28;01mdef[39;00m [38;5;21mopen_files[39m(
[1;32m    231[0m     urlpath,
[1;32m    232[0m     mode[38;5;241m=[39m[38;5;124m"[39m[38;5;124mrb[39m[38;5;124m"[39m,
[0;32m   (...)[0m
[1;32m    242[0m     [38;5;241m*[39m[38;5;241m*[39mkwargs,
[1;32m    243[0m ):
[1;32m    244[0m     [38;5;124;03m"""Given a path or paths, return a list of ``OpenFile`` objects.[39;00m
[1;32m    245[0m 
[1;32m    246[0m [38;5;124;03m    For writing, a str path must contain the "*" character, which will be filled[39;00m
[0;32m   (...)[0m
[1;32m    297[0m [38;5;124;03m    be used as a single context[39;00m
[1;32m    298[0m [38;5;124;03m    """[39;00m
[0;32m--> 299[0m     fs, fs_token, paths [38;5;241m=[39m [43mget_fs_token_paths[49m[43m([49m
[1;32m    300[0m [43m        [49m[43murlpath[49m[43m,[49m
[1;32m    301[0m [43m        [49m[43mmode[49m[43m,[49m
[1;32m    302[0m [43m        [49m[43mnum[49m[38;5;241;43m=[39;49m[43mnum[49m[43m,[49m
[1;32m    303[0m [43m        [49m[43mname_function[49m[38;5;241;43m=[39;49m[43mname_function[49m[43m,[49m
[1;32m    304[0m [43m        [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mkwargs[49m[43m,[49m
[1;32m    305[0m [43m        [49m[43mprotocol[49m[38;5;241;43m=[39;49m[43mprotocol[49m[43m,[49m
[1;32m    306[0m [43m        [49m[43mexpand[49m[38;5;241;43m=[39;49m[43mexpand[49m[43m,[49m
[1;32m    307[0m [43m    [49m[43m)[49m
[1;32m    308[0m     [38;5;28;01mif[39;00m [38;5;124m"[39m[38;5;124mr[39m[38;5;124m"[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m mode [38;5;129;01mand[39;00m auto_mkdir:
[1;32m    309[0m         parents [38;5;241m=[39m {fs[38;5;241m.[39m_parent(path) [38;5;28;01mfor[39;00m path [38;5;129;01min[39;00m paths}

File [0;32m/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/fsspec/core.py:647[0m, in [0;36mget_fs_token_paths[0;34m(urlpath, mode, num, name_function, storage_options, protocol, expand)[0m
[1;32m    642[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mall[39m(p [38;5;241m==[39m protocol [38;5;28;01mfor[39;00m p [38;5;129;01min[39;00m protocols):
[1;32m    643[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    644[0m             [38;5;124m"[39m[38;5;124mWhen specifying a list of paths, all paths must [39m[38;5;124m"[39m
[1;32m    645[0m             [38;5;124m"[39m[38;5;124mshare the same protocol[39m[38;5;124m"[39m
[1;32m    646[0m         )
[0;32m--> 647[0m [38;5;28mcls[39m [38;5;241m=[39m [43mget_filesystem_class[49m[43m([49m[43mprotocol[49m[43m)[49m
[1;32m    648[0m optionss [38;5;241m=[39m [38;5;28mlist[39m([38;5;28mmap[39m([38;5;28mcls[39m[38;5;241m.[39m_get_kwargs_from_urls, urlpath))
[1;32m    649[0m paths [38;5;241m=[39m [[38;5;28mcls[39m[38;5;241m.[39m_strip_protocol(u) [38;5;28;01mfor[39;00m u [38;5;129;01min[39;00m urlpath]

File [0;32m/usr/share/miniconda/envs/cordex-examples/lib/python3.8/site-packages/fsspec/registry.py:230[0m, in [0;36mget_filesystem_class[0;34m(protocol)[0m
[1;32m    228[0m         register_implementation(protocol, _import_class(bit[[38;5;124m"[39m[38;5;124mclass[39m[38;5;124m"[39m]))
[1;32m    229[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mImportError[39;00m [38;5;28;01mas[39;00m e:
[0;32m--> 230[0m         [38;5;28;01mraise[39;00m [38;5;167;01mImportError[39;00m(bit[[38;5;124m"[39m[38;5;124merr[39m[38;5;124m"[39m]) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m
[1;32m    231[0m [38;5;28mcls[39m [38;5;241m=[39m registry[protocol]
[1;32m    232[0m [38;5;28;01mif[39;00m [38;5;28mgetattr[39m([38;5;28mcls[39m, [38;5;124m"[39m[38;5;124mprotocol[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m) [38;5;129;01min[39;00m ([38;5;124m"[39m[38;5;124mabstract[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m):

[0;31mImportError[0m: HTTPFileSystem requires "requests" and "aiohttp" to be installed
ImportError: HTTPFileSystem requires "requests" and "aiohttp" to be installed

